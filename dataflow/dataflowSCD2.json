{
	"name": "dataflowSCD2",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DelimitedText18",
						"type": "DatasetReference"
					},
					"name": "SRCFILE"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable20",
						"type": "DatasetReference"
					},
					"name": "SRCTABLE"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "AzureSqlTable21",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "AzureSqlTable22",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "derivedColumn2"
				},
				{
					"name": "exists1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "exists2"
				},
				{
					"name": "exists3"
				},
				{
					"name": "AlterRow1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ID as integer,",
				"          {Customer Id} as string,",
				"          {First Name} as string,",
				"          {Last Name} as string,",
				"          Company as string,",
				"          City as string,",
				"          Country as string,",
				"          {Phone 1} as string,",
				"          {Phone 2} as string,",
				"          Email as string,",
				"          {Subscription Date} as string,",
				"          Website as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SRCFILE",
				"source(output(",
				"          ID as integer,",
				"          Customer_Id as string,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          Company as string,",
				"          City as string,",
				"          Country as string,",
				"          Phone_1 as string,",
				"          Phone_2 as string,",
				"          Email as string,",
				"          Subscription_Date as date,",
				"          Website as string,",
				"          STATUS as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> SRCTABLE",
				"SRCFILE derive(src_hashkey = md5(Email,{Phone 1},City),",
				"          status = 1) ~> derivedColumn1",
				"SRCTABLE derive(sink_hashkey = md5(Email,Phone_1,City),",
				"          status = 0) ~> derivedColumn2",
				"derivedColumn1, derivedColumn2 exists(SRCFILE@ID == SRCTABLE@ID",
				"     && src_hashkey == sink_hashkey,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists1",
				"derivedColumn2 filter(SRCTABLE@STATUS==1) ~> filter1",
				"filter1, derivedColumn1 exists(Customer_Id == {Customer Id},",
				"     negate:false,",
				"     broadcast: 'auto')~> exists2",
				"exists2, derivedColumn1 exists(sink_hashkey == src_hashkey,",
				"     negate:true,",
				"     broadcast: 'auto')~> exists3",
				"exists3 alterRow(updateIf(1==1)) ~> AlterRow1",
				"exists1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as integer,",
				"          Customer_Id as string,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          Company as string,",
				"          City as string,",
				"          Country as string,",
				"          Phone_1 as string,",
				"          Phone_2 as string,",
				"          Email as string,",
				"          Subscription_Date as date,",
				"          Website as string,",
				"          STATUS as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 2,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1",
				"AlterRow1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          ID as integer,",
				"          Customer_Id as string,",
				"          First_Name as string,",
				"          Last_Name as string,",
				"          Company as string,",
				"          City as string,",
				"          Country as string,",
				"          Phone_1 as string,",
				"          Phone_2 as string,",
				"          Email as string,",
				"          Subscription_Date as date,",
				"          Website as string,",
				"          STATUS as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:false,",
				"     updateable:true,",
				"     upsertable:false,",
				"     keys:['Customer_Id'],",
				"     format: 'table',",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     saveOrder: 1,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          ID,",
				"          Customer_Id,",
				"          First_Name,",
				"          Last_Name,",
				"          Company,",
				"          City,",
				"          Country,",
				"          Phone_1,",
				"          Phone_2,",
				"          Email,",
				"          Subscription_Date,",
				"          Website,",
				"          STATUS = derivedColumn2@status",
				"     )) ~> sink2"
			]
		}
	}
}